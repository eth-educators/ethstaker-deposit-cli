{
    "generate_keys_arguments_decorator": {
        "num_validators": {
            "help": "The number of new validator keys you want to generate (you can always generate more later)",
            "prompt": "Please choose how many new validators you wish to run"
        },
        "folder": {
            "help": "The folder path for the keystore(s) and deposit(s). Pointing to `./validator_keys` by default."
        },
        "chain": {
            "help": "The name of Ethereum PoS chain you are targeting. Use \"mainnet\" if you are depositing ETH",
            "prompt": "Please choose the (mainnet or testnet) network/chain name"
        },
        "keystore_password": {
            "help": "The password that will secure your keystores. You will need to re-enter this to decrypt them when you setup your Ethereum validators. (It is recommended not to use this argument, and wait for the CLI to ask you for your password, as otherwise it will appear in your shell history.)",
            "prompt": "Create a password that secures your validator keystore(s). You will need to re-enter this to decrypt them when you setup your Ethereum validators.",
            "confirm": "Repeat your keystore password for confirmation",
            "mismatch": "Error: the two entered values do not match. Please type again."
        },
        "arg_withdrawal_address": {
            "help": "The Ethereum address that will be used in withdrawal. It typically starts with '0x' followed by 40 hexadecimal characters. Please make sure you have full control over the address you choose here. Once you set a withdrawal address on chain, it cannot be changed.",
            "prompt": "Please enter the optional withdrawal address. Note that you CANNOT change it once you have set it on chain.",
            "confirm": "Repeat your withdrawal address for confirmation.",
            "mismatch": "Error: the two entered values do not match. Please type again."
        },
        "arg_compounding": {
            "help": "Generates compounding validators with 0x02 withdrawal credentials for a 2048 ETH maximum effective balance or generate regular validators with 0x01 withdrawal credentials for a 32 ETH maximum effective balance. Use of this option requires a withdrawal address. This feature is only supported on networks that have undergone the Pectra fork.",
            "prompt": "Please enter yes if you want to generate compounding validators with 0x02 withdrawal credentials for a 2048 ETH maximum effective balance. Compounding validators and 0x02 withdrawal credentials are only supported on networks that have undergone the Pectra fork. Please type no or nothing if you want regular validators with 0x01 withdrawal credentials for a 32 ETH maximum effective balance."
        },
        "arg_amount": {
            "help": "The amount to deposit to these validators in ether denomination. Must be at least 1 ether and can not have greater precision than 1 gwei. Use of this option requires compounding validators.",
            "prompt": "Please enter the amount you wish to deposit to these validators. Must be at least 1 ether and can not have greater precision than 1 gwei. 32 is required to activate a new validator"
        },
        "arg_pbkdf2": {
            "help": "Uses the pbkdf2 hashing function instead of scrypt for generated keystore files. "
        },
        "arg_devnet_chain_setting": {
            "help": "[DEVNET ONLY] Set specific GENESIS_FORK_VERSION value. This should be a JSON string containing an object with the following keys: network_name, genesis_fork_version, exit_fork_version and genesis_validator_root. It should be similar to what you can find in settings.py. This will override any selected chain."
        }
    },
    "generate_keys": {
        "msg_key_creation": "Creating your keys.",
        "msg_creation_success": "\nSuccess!\nYour keys can be found at: ",
        "msg_pause": "\n\nPress any key.",
        "err_verify_keystores": "Failed to verify the keystores.",
        "err_verify_deposit": "Failed to verify the deposit data JSON files."
    }
}
