{
  "exit_transaction_keystore": {
      "arg_exit_transaction_keystore" :{
          "help": "Generate an exit transaction that can be used to exit validators on Ethereum Beacon Chain."
      },
      "arg_exit_transaction_keystore_chain": {
          "help": "The name of the Ethereum PoS chain your validator is running on. \"mainnet\" is the default.",
          "prompt": "Please choose the (mainnet or testnet) network/chain name"
      },
      "arg_exit_transaction_keystore_epoch": {
          "help": "The epoch of when the exit transaction will be valid. The transaction will always be valid by default."
      },
      "arg_exit_transaction_keystore_keystore": {
          "help": "The keystore file associated with the validator you wish to exit.",
          "prompt": "Please enter the location of your keystore file."
      },
      "arg_exit_transaction_keystore_keystore_password": {
          "help": "The password that is used to encrypt the provided keystore. Note: It's not your mnemonic password. (It is recommended not to use this argument, and wait for the CLI to ask you for your password as otherwise it will appear in your shell history.)",
          "prompt": "Enter the password that is used to encrypt the provided keystore.",
          "mismatch": "Error: The provided keystore password was unable to decrypt this keystore file. Make sure you have the correct password and try again."
      },
      "arg_exit_transaction_keystore_output_folder": {
          "help": "The folder path where the exit transactions will be saved to. Pointing to `./exit_transactions` by default."
      },
      "arg_validator_index": {
          "help": "The validator index corresponding to the provided keystore.",
          "prompt": "Please enter the validator index of your validator that corresponds to the provided keystore as identified on the beacon chain."
      },
      "arg_devnet_chain_setting": {
          "help": "[DEVNET ONLY] Set a specific EXIT_FORK_VERSION and GENESIS_VALIDATORS_ROOT value. This should be a JSON string containing an object with the following keys: network_name, genesis_fork_version, exit_fork_version and genesis_validator_root. It should be similar to what you can find in settings.py. This will override any selected chain."
      },
      "msg_exit_transaction_creation": "\nCreating your exit transaction...",
      "msg_verify_exit_transaction": "\nVerifying your exit transaction...",
      "err_verify_exit_transaction": "\nThere was a problem verifying your exit transaction.\nPlease try again",
      "msg_creation_success": "\nSuccess!\nYour exit transaction file can be found at: ",
      "msg_pause": "\n\nPress any key."
  }
}
