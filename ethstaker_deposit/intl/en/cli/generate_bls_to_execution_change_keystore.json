{
  "generate_bls_to_execution_change_keystore": {
      "arg_generate_bls_to_execution_change" :{
          "help": "Generating the SignedBLSToExecutionChange data to enable withdrawals on Ethereum Beacon Chain."
      },
      "arg_withdrawal_address": {
          "help": "The Ethereum address that will be used in withdrawal. It typically starts with '0x' followed by 40 hexadecimal characters. Please make sure you have full control over the address you choose here. Once you set a withdrawal address on chain, it cannot be changed.",
          "prompt": "Please enter the withdrawal address. Note that you CANNOT change it once you have set it on chain.",
          "confirm": "Repeat your withdrawal address for confirmation.",
          "mismatch": "Error: the two entered values do not match. Please type again."
      },
      "arg_devnet_chain_setting": {
          "help": "[DEVNET ONLY] Set a specific GENESIS_FORK_VERSION and GENESIS_VALIDATORS_ROOT value. This should be a JSON string containing an object with the following keys: network_name, genesis_fork_version, exit_fork_version and genesis_validator_root. It should be similar to what you can find in settings.py. This will override any selected chain."
      },
      "arg_validator_index": {
          "help": "The validator index",
          "prompt": "Please enter the validator index number of your validator as identified on the beacon chain."
      },
      "arg_bls_withdrawal_credentials_list": {
          "help": "A list of 32-byte old BLS withdrawal credentials of the certain validator(s)",
          "prompt": "Please enter a list of the old BLS withdrawal credentials of your validator(s). Split multiple items with whitespaces or commas. The withdrawal credentials are in hexadecimal encoded form."
      },
      "arg_bls_to_execution_changes_keystore_keystore": {
          "help": "The keystore file associated with the validator you wish to exit.",
          "prompt": "Please enter the location of your keystore file."
      },
      "arg_bls_to_execution_changes_keystore_keystore_password": {
        "help": "The password that is used to encrypt the provided keystore. Note: It's not your mnemonic password. (It is recommended not to use this argument, and wait for the CLI to ask you for your password as otherwise it will appear in your shell history.)",
        "prompt": "Enter the password that is used to encrypt the provided keystore.",
        "mismatch": "Error: The provided keystore password was unable to decrypt this keystore file. Make sure you have the correct password and try again."
      },
      "arg_chain": {
          "help": "The name of Ethereum PoS chain you are targeting. Use \"mainnet\" if you are depositing ETH",
          "prompt": "Please choose the (mainnet or testnet) network/chain name"
      },
      "arg_fork": {
          "help": "The fork name of the fork you want to signing the message with.",
          "prompt": "Please choose the fork name of the fork you want to signing the message with."
      },
      "arg_bls_to_execution_changes_keystore_folder": {
          "help": "The folder path for the keystore(s). Pointing to `./bls_to_execution_changes` by default."
      },
      "arg_bls_to_execution_changes_keystore_output_folder": {
          "help": "Folder where you want to save the bls keystore change"
      },
      "msg_key_creation": "Creating your SignedBLSToExecutionChangeKeystore.",
      "msg_verify_btec": "Verifying the bls_to_execution_changes_keystore JSON file.",
      "msg_creation_success": "\nSuccess!\nYour SignedBLSToExecutionChangeKeystore JSON file can be found at: ",
      "msg_pause": "\n\nPress any key.",
      "err_verify_btec": "Failed to verify the bls_to_execution_change_keystore JSON file."
  }
}
